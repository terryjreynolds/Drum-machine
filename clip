

const cacheName = "v1";
const cacheAssets = [
  "./",
  "./index.html",
  "./script.js",
  "./style.css",
  "img/icons/icon-128x128.png",
  "img/icons/icon-144x144.png",
  "img/icons/icon-152x152.png",
  "img/icons/icon-192x192.png",
  "img/icons/icon-256x256.png",
  "img/audience-small.jpg",
  "img/audience.jpg",
  "sounds/clap.wav",
  "sounds/hi-hat.wav",
  "sounds/kick.mp3",
  "sounds/openhat.wav",
  "sounds/orchhit.wav",
  "sounds/ride.wav",
  "sounds/snare.wav",
  "sounds/tom.wav"
];

//Call Install event
self.addEventListener("install", e => {
  console.log("Service Worker: Installed");

  e.waitUntil(
    caches
      .open(cacheName)
      .then(cache => {
        console.log("Service Worker: Caching Files");
        cache.addAll(cacheAssets);
      })
      .then(() => self.skipWaiting())
  );
});

//Call Activate event
self.addEventListener("activate", e => {
  console.log("Service Worker: Activated");
  //Remove unwanted caches
  e.waitUntil(
    caches.keys().then(cacheNames => {
      return Promise.all(
        cacheNames.map(cache => {
          if (cache !== cacheName) {
            console.log("Service Worker: Clearing Old Cache");
            return caches.delete(cache);
          }
        })
      );
    })
  );
});
//Call Fetch event
self.addEventListener("fetch", e => {
  console.log("Service Worker: Fetching");

  e.respondWith(
    caches.match(e.request).then(function(response) {
      return response || fetch(e.request);
    })
  );
});







if ("serviceWorker" in navigator) {
  window.addEventListener("load", () => {
    navigator.serviceWorker.register("./sw_sound_effects.js").then(() => {
      console.log("Service Worker Registered");
    });
  });
}





<audio class="a">
        <source   src="sounds/clap.wav" type="audio/wav">
            </audio>
        <audio class="s">
          <source src="sounds/hi-hat.wav" type="audio/wav">
        </audio>
        <audio class="d">
          <source src="sounds/kick.mp3" type="audio/mp3">
        </audio>
        <audio class="f">
          <source src="sounds/openhat.wav" type="audio/wav">
        </audio>
        <audio class="g">
          <source src="sounds/orchhit.wav" type="audio/wav">
        </audio>
        <audio class="h">
          <source src="sounds/ride.wav" type="audio/wav">
        </audio>
        <audio class="j">
          <source src="sounds/snare.wav" type="audio/wav">
        </audio>
        <audio class="k">
          <source src="sounds/tom.wav" type="audio/wav">
        </audio>

{
  "name": "Drum Machine",
  "short_name": "Drum Machine",
  "icons": [
    {
      "src": "img/icons/icon-128x128.png",
      "sizes": "128x128",
      "type": "image/png"
    },
    {
      "src": "img/icons/icon-144x144.png",
      "sizes": "144x144",
      "type": "image/png"
    },
    {
      "src": "img/icons/icon-152x152.png",
      "sizes": "152x152",
      "type": "image/png"
    },
    {
      "src": "img/icons/icon-192x192.png",
      "sizes": "192x192",
      "type": "image/png"
    },
    {
      "src": "img/icons/icon-256x256.png",
      "sizes": "256x256",
      "type": "image/png"
    }
  ],
  "start_url": "./index.html",
  "display": "standalone",
  "background_color": "#3E4EB8",
  "theme_color": "#2F3BA2"
}



<link rel="shortcut icon" href="">
    <link rel="manifest" href="./manifest.json">



    if (audioCont !== "webkitAudioContext") {
    source.start();
  } else {
    source.noteOn(0);
  }